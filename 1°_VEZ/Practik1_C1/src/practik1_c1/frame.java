/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frame.java
 *
 * Created on Aug 13, 2012, 4:19:40 PM
 */

package practik1_c1;

import java.awt.Color;
import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileFilter;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.StringReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author andychaw
 */
public class frame extends javax.swing.JFrame {
 String nombre;
    /** Creates new form frame */
    public frame() {
        initComponents();
        jTextArea2.setVisible(false);
        super.setSize(493, 395);
        super.setLocation(350, 100);

    }

  
   Yylex mylexi;
   parser myparse;
   spe va= new spe();
   Tabla t = new Tabla();


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });

        jScrollPane2.setViewportView(jTextPane1);

        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Candara", 0, 12));
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        jButton1.setFont(new java.awt.Font("DejaVu Sans", 1, 15));
        jButton1.setText("↓");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("DejaVu Sans", 1, 15));
        jButton2.setText("↑");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setText("New");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Open");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Save");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Save As");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setText("Close");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        jMenu1.add(Exit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem6.setText("Compile");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem9.setText("specifications");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);

        jMenuItem7.setText("Mistakes");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuItem8.setText("Counting");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem8);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Help");

        jMenuItem10.setText("User Manual");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem10);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(425, Short.MAX_VALUE))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, 0, 0, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

    jTextPane1.setText("");
    jTextArea2.setText("");
    FileNameExtensionFilter f = new FileNameExtensionFilter("Type arch", "arch");
    JFileChooser jf = new JFileChooser();
    jf.setFileFilter(f);
    int files = jf.showSaveDialog(null);
    


nombre = jf.getSelectedFile().getPath();
String otro = jf.getSelectedFile().getName();
if(new File(jf.getSelectedFile().getPath()).exists())
{
    if(JOptionPane.OK_OPTION == JOptionPane.showConfirmDialog(this,"The files named"+" "+"\""+otro+"\""+" "+"alredy exists."+"\n"+"Do you want to replace it?",null,JOptionPane.YES_NO_OPTION))
    {

        BufferedWriter bw;
                try {
                    bw = new BufferedWriter(new FileWriter(nombre));
                    bw.write(jTextPane1.getText());
                    bw.close();
                } catch (IOException ex) {
                    Logger.getLogger(frame.class.getName()).log(Level.SEVERE, null, ex);
                }

    }
 else
    {
        int fs = jf.showSaveDialog(null);
 }

 } else
    {
        BufferedWriter writes;
        try {
        writes= new BufferedWriter(new FileWriter(jf.getSelectedFile().getPath()+".arch"));
        writes.write(jTextPane1.getText());
        writes.close();

        }catch(IOException ex){}
        }
        
 //---------------------------------------------       
   
        mylexi.val.clear();
       
    try{
     BufferedReader br = new BufferedReader(new FileReader(jf.getSelectedFile().getPath()));
       String line= br.readLine();
        while (line!= null)
        {

                     StyledDocument doc = (StyledDocument)jTextPane1.getDocument();
                     Style style = doc.addStyle("StyleName", null);
                     StyleConstants.setBold(style, true);
                     StyleConstants.setForeground(style, Color.BLACK);
                     doc.insertString(doc.getLength(),line+"\n", style);
                     line = br.readLine();
        }} catch(Exception ex){}

 practik1_c1.CUP$parser$actions.prnts.clear();
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_ExitActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed

        jTextPane1.setText("");
        jTextArea2.setText("");
    FileNameExtensionFilter f = new FileNameExtensionFilter("Type arch", "arch");
    JFileChooser jf = new JFileChooser();
    jf.setFileFilter(f);
    int files = jf.showOpenDialog(null);
    if (files == JFileChooser.APPROVE_OPTION)
    {
        nombre = jf.getSelectedFile().getPath();
        try{
        BufferedReader br = new BufferedReader(new FileReader(jf.getSelectedFile().getPath()));
       String line= br.readLine();
        while (line!= null)
        {
                    
                     StyledDocument doc = (StyledDocument)jTextPane1.getDocument();
                     Style style = doc.addStyle("StyleName", null);
                     StyleConstants.setBold(style, true);
                     StyleConstants.setForeground(style, Color.BLACK);
                     doc.insertString(doc.getLength(),line+"\n", style);
                     line = br.readLine();
        }
        }
        catch (Exception ex) {

        }
    }
    practik1_c1.CUP$parser$actions.prnts.clear();
    mylexi.val.clear();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
         BufferedWriter bw = null;

        try {
            File archivo = new File(nombre);
            bw = new BufferedWriter(new FileWriter(archivo.getAbsolutePath()));

            bw.write(jTextPane1.getText());
            bw.close();
        }
        catch (Exception ex)
        {
        }
        




                // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
       FileNameExtensionFilter f = new FileNameExtensionFilter("Type arch", "arch");
    JFileChooser jf = new JFileChooser();
    jf.setFileFilter(f);
    int files = jf.showSaveDialog(null);



nombre = jf.getSelectedFile().getPath();
String otro = jf.getSelectedFile().getName();
if(new File(jf.getSelectedFile().getPath()).exists())
{
    if(JOptionPane.OK_OPTION == JOptionPane.showConfirmDialog(this,"The files named"+" "+"\""+otro+"\""+" "+"alredy exists."+"\n"+"Do you want to replace it?",null,JOptionPane.YES_NO_OPTION))
    {
        System.out.println(nombre);
        BufferedWriter bw = null;
        try {
            File archivo = new File(nombre);
            bw = new BufferedWriter(new FileWriter(archivo.getAbsolutePath()));

            bw.write(jTextPane1.getText());
            bw.close();
             }
        catch (Exception ex)
        {
        }
    }
else
    {
        int fs = jf.showSaveDialog(null);
 }

 } else
    {
        BufferedWriter writes;
        try {
        writes= new BufferedWriter(new FileWriter(jf.getSelectedFile().getPath()+".arch"));
        writes.write(jTextPane1.getText());
        writes.close();

        }catch(IOException ex){}
        }

        
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed

        
        jTextArea2.setText("");
        try {
            try {
                mylexi = new Yylex(new StringReader(jTextPane1.getText()));
                myparse = new parser(mylexi);
                myparse.parse(); // TODO add your handling code here:
            } catch (Exception ex) {
            }
           // mylexi.valuestrue();
            mylexi.mistakes();
            
            
            painting();
         

            for (int g=0; g<practik1_c1.CUP$parser$actions.prnts.size();g++ )
            {
                String values = practik1_c1.CUP$parser$actions.prnts.get(g).toString();
                String p = values.substring(1, values.length()-1);
               // System.out.println("----"+p);
                jTextArea2.setVisible(true);
                super.setSize(493, 490);
                jTextArea2.append(p + "\n");
            }


        } catch (BadLocationException ex) {
            Logger.getLogger(frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed

try{
         File path = new File("Errores_Archivo.html");
     Desktop.getDesktop().open(path);
        }
catch (IOException ex) {
}
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
         va.setVisible(true);
         // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentHidden

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
t.show();        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
jTextArea2.setVisible(true);
 super.setSize(493, 490);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
jTextArea2.setVisible(false);
        super.setSize(493, 390);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed

//System.out.println(nombre);
int result = JOptionPane.showConfirmDialog(jTextPane1,"Guardar Trabajo, Antes de Salir");
if (result == JOptionPane.YES_OPTION) {
 FileNameExtensionFilter f = new FileNameExtensionFilter("Type arch", "arch");
JFileChooser ven = new JFileChooser();
int i = ven.showSaveDialog(null);
    ven.setFileFilter(f);
if (i == JFileChooser.APPROVE_OPTION) {
try{
        BufferedWriter bw = new BufferedWriter(new FileWriter(ven.getSelectedFile().getPath()+".arch"));
        bw.write(jTextPane1.getText());
        bw.close();
        }
        catch (Exception ex) {

        }

}

} else if (result == JOptionPane.NO_OPTION) {
System.exit(0);
}
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
     File path = new File ("User_Manual.pdf");
                try {
                    Desktop.getDesktop().open(path);
                } catch (IOException ex) {

                }
   // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem10ActionPerformed
public void painting() throws BadLocationException
{
    jTextPane1.setText("");
    String pala = "";
    char cara;
    Object[]c;
    int j=0;
    c = mylexi.val.toArray();
    for (int p=0; p<c.length; p++)
    {
        System.out.println(pala);
        pala = c[p].toString();
        cara = pala.charAt(0);


        switch(j)
        {
            case 0:
                if( pala.equalsIgnoreCase("<begin>"))
                {
                    
                     StyledDocument doc = (StyledDocument)jTextPane1.getDocument();
                     Style style = doc.addStyle("StyleName", null);
                     StyleConstants.setBold(style, true);
                     StyleConstants.setForeground(style, new java.awt.Color(60,179, 113));
                     doc.insertString(doc.getLength(),pala, style);
                }
                else if(pala.equals("+") || pala.equals("-") || pala.equals("*") || pala.equals("/") || pala.equals("(") || pala.equals("&&")
                   ||pala.equals(")")||pala.equals("=")||pala.equals("||")||pala.equals("<")||pala.equals(">"))
                {
                StyledDocument doc = (StyledDocument)jTextPane1.getDocument();
                     Style style = doc.addStyle("StyleName", null);
                     StyleConstants.setBold(style, true);
                     StyleConstants.setForeground(style, new java.awt.Color(138,74, 160));
                     doc.insertString(doc.getLength(),pala, style);

                }
                else if(pala.equalsIgnoreCase("string")|| pala.equalsIgnoreCase("integer")||pala.equalsIgnoreCase("boolean")||
                        pala.equalsIgnoreCase("float")||pala.equalsIgnoreCase("char")||pala.equalsIgnoreCase("var")||pala.equalsIgnoreCase("true")
                        ||pala.equalsIgnoreCase("false")||pala.equalsIgnoreCase("if")||pala.equalsIgnoreCase("then")||pala.equalsIgnoreCase("else")
                        ||pala.equalsIgnoreCase("endif")||pala.equalsIgnoreCase("elseif")||pala.equalsIgnoreCase("for")||pala.equalsIgnoreCase("print")
                        ||pala.equalsIgnoreCase("to")||pala.equalsIgnoreCase("next")||pala.equalsIgnoreCase("while")||pala.equalsIgnoreCase("endwhile")
                        )
                {
                     StyledDocument doc = (StyledDocument)jTextPane1.getDocument();
                     Style style = doc.addStyle("StyleName", null);
                     StyleConstants.setBold(style, true);
                     StyleConstants.setForeground(style, new java.awt.Color(52,97, 184));
                     doc.insertString(doc.getLength(),pala, style);
                }
                 else if(pala.equalsIgnoreCase("//"))
                {

                     StyledDocument doc = (StyledDocument)jTextPane1.getDocument();
                     Style style = doc.addStyle("StyleName", null);
                     StyleConstants.setBold(style, true);
                     StyleConstants.setForeground(style, Color.darkGray);
                     doc.insertString(doc.getLength(),pala, style);

                }
                else if(pala.matches("^\".*\"$"))
                {

                     StyledDocument doc = (StyledDocument)jTextPane1.getDocument();
                     Style style = doc.addStyle("StyleName", null);
                     StyleConstants.setBold(style, true);
                     StyleConstants.setForeground(style,new java.awt.Color(99,52,45) );
                     doc.insertString(doc.getLength(),pala, style);

          }
                else if(pala.matches("^//.*\\n$")|| pala.matches("/\\*(.*|\\n|\\s)*\\*/"))
                {

                     StyledDocument doc = (StyledDocument)jTextPane1.getDocument();
                     Style style = doc.addStyle("StyleName", null);
                     StyleConstants.setBold(style, true);
                     StyleConstants.setForeground(style,Color.gray );
                     doc.insertString(doc.getLength(),pala, style);
                     System.out.println("yes!!");
                   
                }
                else if(pala.matches("^[a-zA-z]+([_]*[a-zA-z0-9]*)$"))
                {

                     StyledDocument doc = (StyledDocument)jTextPane1.getDocument();
                     Style style = doc.addStyle("StyleName", null);
                     StyleConstants.setBold(style, true);
                     StyleConstants.setForeground(style,Color.pink);
                     doc.insertString(doc.getLength(),pala, style);

                }


                else if(pala.matches("^-?[0-9]+$"))
                {

                     StyledDocument doc = (StyledDocument)jTextPane1.getDocument();
                     Style style = doc.addStyle("StyleName", null);
                     StyleConstants.setBold(style, true);
                     StyleConstants.setForeground(style, new java.awt.Color(243,78,12));
                     doc.insertString(doc.getLength(),pala, style);

                }
                else if(pala.matches("\\W"))
                {

                     StyledDocument doc = (StyledDocument)jTextPane1.getDocument();
                     Style style = doc.addStyle("StyleName", null);
                     StyleConstants.setBold(style, true);
                     StyleConstants.setForeground(style, Color.RED);
                     doc.insertString(doc.getLength(),pala, style);

                }


                 else if(pala.matches("^[-]?[0-9]+(\\.[0-9]+)$"))
                {

                     StyledDocument doc = (StyledDocument)jTextPane1.getDocument();
                     Style style = doc.addStyle("StyleName", null);
                     StyleConstants.setBold(style, true);
                     StyleConstants.setForeground(style, Color.yellow);
                     doc.insertString(doc.getLength(),pala, style);

                }

                else if(pala.equalsIgnoreCase("<end>"))
                {

                     StyledDocument doc = (StyledDocument)jTextPane1.getDocument();
                     Style style = doc.addStyle("StyleName", null);
                     StyleConstants.setBold(style, true);
                     StyleConstants.setForeground(style, new java.awt.Color(60,179, 113));
                     doc.insertString(doc.getLength(),pala, style);
                     
                }
                else if(pala.equals("\n")|| pala.equals("\t")||pala.equals("\r") || pala.equals(" "))
                {
                StyledDocument doc = (StyledDocument)jTextPane1.getDocument();
                     Style style = doc.addStyle("StyleName", null);
                     StyleConstants.setBold(style, true);
                     StyleConstants.setForeground(style, new java.awt.Color(60,179, 113));
                     doc.insertString(doc.getLength(),pala, style);


                }
            


        }
      

       


    }




}



    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Exit;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables

}
